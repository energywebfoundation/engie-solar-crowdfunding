name: Build and deploy

on:
  push:
    branches: ['DOI-DOI-1823_engie']
  workflow_dispatch:

jobs:
  cancel-previous:
    name: 'Cancel Previous Runs'
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}
  unique_id:
    runs-on: ubuntu-latest
    steps:
      - name: Generate unique id
        id: unique_id
        run: echo "::set-output name=id::$(uuidgen)"
    outputs:
      unique_id: ${{ steps.unique_id.outputs.id }}
  install-build-and-push:
    runs-on: ubuntu-latest
    needs: [cancel-previous, unique_id]
    steps:
      - name: Get GHA environment name
        id: env_vars
        run: |
          echo "Running on branch ${{ github.ref }}"
          if [ "${{ github.ref }}" = "refs/heads/DOI-1823_engie" ]; then
            echo "::set-output name=aws_access_key_id::${{ secrets.SANDBOX_AWS_ACCESS_KEY_ID }}"
            echo "::set-output name=aws_secret_key::${{ secrets.SANDBOX_AWS_SECRET_ACCESS_KEY }}"
            echo "::set-output name=aws_region::${{ secrets.SANDBOX_AWS_REGION }}"
            echo "::set-output name=aws_ecr_repository::${{ secrets.SANDBOX_ECR_REPOSITORY }}"
            echo "::set-output name=argocd_url::${{ secrets.SANDBOX_ARGOCD_URL }}"
            echo "::set-output name=argocd_username::${{ secrets.SANDBOX_ARGOCD_USERNAME }}"
            echo "::set-output name=argocd_password::${{ secrets.SANDBOX_ARGOCD_PASS }}"
            echo "::set-output name=next_public_ui_base_url::https://esc-sandbox.energyweb.org"
            echo "::set-output name=next_public_chain_id::73799"
            echo "::set-output name=next_public_rpc_url::https://volta-rpc-vkn5r5zx4ke71f9hcu0c.energyweb.org/"
            echo "::set-output name=next_public_cache_server::https://identitycache-dev.energyweb.org/v1"
            echo "::set-output name=next_public_org_namespace::iam.ewc"
            echo "::set-output name=next_public_network_name::EnergyWeb Volta Chain"
            echo "::set-output name=next_public_currency_name::Volta Token"
            echo "::set-output name=next_public_currency_symbol::VT"
            echo "::set-output name=next_public_patron_role::email.roles.eea.apps.florin.engietestvolta.iam.ewc"
            echo "::set-output name=next_public_patron_role_version::1"
            echo "::set-output name=next_public_token_limit::200"
            echo "::set-output name=next_public_global_token_limit::10000"
            echo "::set-output name=next_public_interest_rate::10%"
            echo "::set-output name=next_public_block_explorer_url::https://volta-explorer.energyweb.org"
            echo "::set-output name=next_public_activate_staking_date::2022-04-04T04:00"
            echo "::set-output name=next_public_close_staking_date::2022-04-04T09:14"
            echo "::set-output name=next_public_lock_stakes_date::2022-04-04T09:15"
            echo "::set-output name=next_public_release_rewards_date::2022-04-04T09:25"
            echo "::set-output name=next_public_full_stop_date::2022-04-04T09:30"
          else
            echo "Branch ${{ github.ref }} is not configured for deployment"
            exit 1
          fi
      - uses: actions/checkout@v2
      - name: Get the tag version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: DOI-1823_engie
          custom_release_rules: major:major:Major Changes,minor:minor:Minor Changes,chore:patch:Chores

      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ steps.env_vars.outputs.aws_access_key_id }}
          aws-secret-access-key: ${{ steps.env_vars.outputs.aws_secret_key }}
          aws-region: ${{ steps.env_vars.outputs.aws_region }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build & push docker images
        env:
          BUILD_ID: ${{ steps.tag_version.outputs.new_tag }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build -t $ECR_REGISTRY/${{ steps.env_vars.outputs.aws_ecr_repository }}:$BUILD_ID -f Dockerfile .
          docker push $ECR_REGISTRY/${{ steps.env_vars.outputs.aws_ecr_repository }}:$BUILD_ID
        env:
          NEXT_PUBLIC_UI_BASE_URL: ${{ steps.env_vars.outputs.next_public_ui_base_url }}
          NEXT_PUBLIC_CHAIN_ID: ${{ steps.env_vars.outputs.next_public_chain_id }}
          NEXT_PUBLIC_RPC_URL: ${{ steps.env_vars.outputs.next_public_rpc_url }}
          NEXT_PUBLIC_CACHE_SERVER: ${{ steps.env_vars.outputs.next_public_cache_server }}
          NEXT_PUBLIC_ORG_NAMESPACE: ${{ steps.env_vars.outputs.next_public_org_namespace }}
          NEXT_PUBLIC_NETWORK_NAME: ${{ steps.env_vars.outputs.next_public_network_name }}
          NEXT_PUBLIC_CURRENCY_NAME: ${{ steps.env_vars.outputs.next_public_currency_name }}
          NEXT_PUBLIC_CURRENCY_SYMBOL: ${{ steps.env_vars.outputs.next_public_currency_symbol }}
          NEXT_PUBLIC_PATRON_ROLE: ${{ steps.env_vars.outputs.next_public_patron_role }}
          NEXT_PUBLIC_PATRON_ROLE_VERSION: ${{ steps.env_vars.outputs.next_public_patron_role_version }}
          NEXT_PUBLIC_TOKEN_LIMIT: ${{ steps.env_vars.outputs.next_public_token_limit }}
          NEXT_PUBLIC_GLOBAL_TOKEN_LIMIT: ${{ steps.env_vars.outputs.next_public_global_token_limit }}
          NEXT_PUBLIC_INTEREST_RATE: ${{ steps.env_vars.outputs.next_public_interest_rate }}
          NEXT_PUBLIC_BLOCK_EXPLORER_URL: ${{ steps.env_vars.outputs.next_public_block_explorer_url }}
          NEXT_PUBLIC_ACTIVATE_STAKING_DATE: ${{ steps.env_vars.outputs.next_public_activate_staking_date }}
          NEXT_PUBLIC_CLOSE_STAKING_DATE: ${{ steps.env_vars.outputs.next_public_close_staking_date }}
          NEXT_PUBLIC_LOCK_STAKES_DATE: ${{ steps.env_vars.outputs.next_public_lock_stakes_date }}
          NEXT_PUBLIC_RELEASE_REWARDS_DATE: ${{ steps.env_vars.outputs.next_public_release_rewards_date }}
          NEXT_PUBLIC_FULL_STOP_DATE: ${{ steps.env_vars.outputs.next_public_full_stop_date }}
      - name: Logout of Amazon ECR
        if: always()
        run: docker logout ${{ steps.login-ecr.outputs.registry }}

      - name: ArgoCD login
        uses: clowdhaus/argo-cd-action/@v1.10.0
        id: argocd_login
        with:
          command: login ${{ steps.env_vars.outputs.argocd_url }}
          options: --insecure --password ${{ steps.env_vars.outputs.argocd_password }} --username ${{ steps.env_vars.outputs.argocd_username }}

      - name: ArgoCD overvrite values.yaml
        uses: clowdhaus/argo-cd-action/@v1.10.0
        id: argocd_image_tag_overwrite
        with:
          command: app set esc
          options: -p image.tag=${{ steps.tag_version.outputs.new_tag }}
