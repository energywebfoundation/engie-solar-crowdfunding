/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BytesLike,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Staking, StakingInterface } from "../Staking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_claimManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewardProvider",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_serviceRole",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_patronRole",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "tokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "tokenSymbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "CampaignAborted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_amout",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "NewStake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "refunded",
        type: "uint256",
      },
    ],
    name: "RefundExceeded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
    ],
    name: "RewardSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "initDate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_startDate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_endDate",
        type: "uint256",
      },
    ],
    name: "StakingPoolInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "statusType",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "date",
        type: "uint256",
      },
    ],
    name: "StatusChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amout",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "TokenBurnt",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_amout",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimManagerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contributionLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "depositRewards",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "endDate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fullStopDate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getContractStatus",
    outputs: [
      {
        internalType: "bool",
        name: "_isContractInitialized",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "_isContractPaused",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "_isContractAborted",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "hardCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_provider",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_role",
        type: "bytes32",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_signupStart",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_signupEnd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_fullStopDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_hardCap",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_contributionLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minRequiredStake",
        type: "uint256",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "minRequiredStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "patronRole",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "redeem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "redeemAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "remainingRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "serviceRole",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "signupEnd",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "signupStart",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "startDate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sweep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sweeped",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "terminate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unPause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200291e3803806200291e833981016040819052620000349162000251565b8151829082906200004d906003906020850190620000c1565b50805162000063906004906020840190620000c1565b505060108054336001600160a01b03199182161790915560138054600160281b600160c81b031916650100000000006001600160a01b039a8b1602179055600e95909555505050600f55601180549091169190921617905562000331565b828054620000cf90620002f4565b90600052602060002090601f016020900481019282620000f357600085556200013e565b82601f106200010e57805160ff19168380011785556200013e565b828001600101855582156200013e579182015b828111156200013e57825182559160200191906001019062000121565b506200014c92915062000150565b5090565b5b808211156200014c576000815560010162000151565b80516001600160a01b03811681146200017f57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001ac57600080fd5b81516001600160401b0380821115620001c957620001c962000184565b604051601f8301601f19908116603f01168101908282118183101715620001f457620001f462000184565b816040528381526020925086838588010111156200021157600080fd5b600091505b8382101562000235578582018301518183018401529082019062000216565b83821115620002475760008385830101525b9695505050505050565b60008060008060008060c087890312156200026b57600080fd5b620002768762000167565b9550620002866020880162000167565b6040880151606089015160808a015192975090955093506001600160401b0380821115620002b357600080fd5b620002c18a838b016200019a565b935060a0890151915080821115620002d857600080fd5b50620002e789828a016200019a565b9150509295509295509295565b600181811c908216806200030957607f821691505b602082108114156200032b57634e487b7160e01b600052602260045260246000fd5b50919050565b6125dd80620003416000396000f3fe6080604052600436106102455760003560e01c806379cc679011610139578063c032846b116100b6578063db006a751161007a578063db006a751461062a578063dd2f35e91461064a578063dd62ed3e14610660578063eb013933146106a6578063f7b188a5146106c5578063fb86a404146106da57600080fd5b8063c032846b14610577578063c11aae8c146105bc578063c24a0f8b146105dc578063c399ec88146105f2578063ce45ed261461061457600080fd5b8063a457c2d7116100fd578063a457c2d7146104eb578063a9059cbb1461050b578063ac4ab3fb1461052b578063af63dda41461054b578063afb62e561461056157600080fd5b806379cc6790146104755780637c0e77ac14610495578063817b1cd2146104ab5780638456cb59146104c157806395d89b41146104d657600080fd5b806323b872dd116101c75780633a4b66f11161018b5780633a4b66f11461040157806342966c68146104095780634a3642a51461042957806370a082311461043f5780637332e0771461045f57600080fd5b806323b872dd1461037b5780632f4350c21461039b578063313ce567146103b057806335faa416146103cc57806339509351146103e157600080fd5b80630c08bf881161020e5780630c08bf881461031b5780630e15561a14610332578063152111f71461034857806318160ddd146103505780631aeae7ba1461036557600080fd5b806216ee161461024a5780630572b0cc1461029057806306fdde03146102b3578063095ea7b3146102d55780630b97bc8614610305575b600080fd5b34801561025657600080fd5b50601354610273906501000000000090046001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561029c57600080fd5b506102a56106f0565b604051908152602001610287565b3480156102bf57600080fd5b506102c861073c565b60405161028791906122b8565b3480156102e157600080fd5b506102f56102f0366004612329565b6107ce565b6040519015158152602001610287565b34801561031157600080fd5b506102a5600a5481565b34801561032757600080fd5b506103306107e4565b005b34801561033e57600080fd5b506102a560075481565b610330610957565b34801561035c57600080fd5b506002546102a5565b34801561037157600080fd5b506102a5600e5481565b34801561038757600080fd5b506102f5610396366004612353565b610bbd565b3480156103a757600080fd5b50610330610c67565b3480156103bc57600080fd5b5060405160128152602001610287565b3480156103d857600080fd5b50610330610c9f565b3480156103ed57600080fd5b506102f56103fc366004612329565b610def565b610330610e2b565b34801561041557600080fd5b5061033061042436600461238f565b6113b6565b34801561043557600080fd5b506102a560095481565b34801561044b57600080fd5b506102a561045a3660046123a8565b6113c2565b34801561046b57600080fd5b506102a560125481565b34801561048157600080fd5b50610330610490366004612329565b6113dd565b3480156104a157600080fd5b506102a560145481565b3480156104b757600080fd5b506102a5600d5481565b3480156104cd57600080fd5b50610330611463565b3480156104e257600080fd5b506102c8611527565b3480156104f757600080fd5b506102f5610506366004612329565b611536565b34801561051757600080fd5b506102f5610526366004612329565b6115cf565b34801561053757600080fd5b506102f5610546366004612329565b6115dc565b34801561055757600080fd5b506102a5600b5481565b34801561056d57600080fd5b506102a560085481565b34801561058357600080fd5b506013546040805160ff640100000000840481161515825263010000008404811615156020830152909216151590820152606001610287565b3480156105c857600080fd5b506103306105d73660046123ca565b611666565b3480156105e857600080fd5b506102a560065481565b3480156105fe57600080fd5b50336000908152601560205260409020546102a5565b34801561062057600080fd5b506102a5600c5481565b34801561063657600080fd5b5061033061064536600461238f565b611890565b34801561065657600080fd5b506102a5600f5481565b34801561066c57600080fd5b506102a561067b36600461241f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3480156106b257600080fd5b506013546102f590610100900460ff1681565b3480156106d157600080fd5b50610330611b42565b3480156106e657600080fd5b506102a560055481565b6013546000906301000000900460ff16156107265760405162461bcd60e51b815260040161071d90612452565b60405180910390fd5b610737610732336113c2565b611c21565b905090565b60606003805461074b9061247e565b80601f01602080910402602001604051908101604052809291908181526020018280546107779061247e565b80156107c45780601f10610799576101008083540402835291602001916107c4565b820191906000526020600020905b8154815290600101906020018083116107a757829003601f168201915b5050505050905090565b60006107db338484611d6b565b50600192915050565b6010546001600160a01b0316331461080e5760405162461bcd60e51b815260040161071d906124b3565b60135460ff16156108565760405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e481d195c9b5a5b985d195960721b604482015260640161071d565b6006544211156108a85760405162461bcd60e51b815260206004820152601f60248201527f4572726f723a2063616e63656c696e672061667465722063616d706169676e00604482015260640161071d565b6007546013805460ff1916600117905580156108fa576011546040516001600160a01b039091169082156108fc029083906000818181858888f193505050501580156108f8573d6000803e3d6000fd5b505b61092060006005819055600981905560078190556013805463ff00000019169055601255565b6040514281527f396ef65364c652a5186a005bb7dcf6aac4d2adcb6c6d0adf39a5f13104a2e344906020015b60405180910390a150565b6000600d54607861096891906124f4565b90506109766103e882612513565b600d546109839190612535565b3410156109c75760405162461bcd60e51b81526020600482015260126024820152714e6f7420456e6f756768207265776172647360701b604482015260640161071d565b60135460ff1615610a0d5760405162461bcd60e51b815260206004820152601060248201526f10d85b5c185a59db8818589bdc9d195960821b604482015260640161071d565b600a5442118015610a1f575060065442105b610a645760405162461bcd60e51b815260206004820152601660248201527510dbdb9d1c9858dd081b9bdd081858dd1a5d985d195960521b604482015260640161071d565b60135462010000900460ff1615610aae5760405162461bcd60e51b815260206004820152600e60248201526d105b1c9958591e48199d5b99195960921b604482015260640161071d565b60003411610af45760405162461bcd60e51b8152602060048201526013602482015272139bc81c995dd85c991cc81c1c9bdd9a591959606a1b604482015260640161071d565b610b0033600e546115dc565b80610b1557506011546001600160a01b031633145b610b615760405162461bcd60e51b815260206004820181905260248201527f4e6f7420656e726f6c6c656420617320736572766963652070726f7669646572604482015260640161071d565b3460076000828254610b739190612535565b90915550506013805462ff00001916620100001790556040517f6379339f0ae63e95e65fad18ca2a7ec4e7e3f05f3cc5f7079f4d8da8cec34faa9061094c9033903490429061254d565b6000610bca848484611e8f565b6001600160a01b038416600090815260016020908152604080832033845290915290205482811015610c4f5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b606482015260840161071d565b610c5c8533858403611d6b565b506001949350505050565b6013546301000000900460ff1615610c915760405162461bcd60e51b815260040161071d90612452565b610c9d610645336113c2565b565b610cab33600e546115dc565b80610cc057506011546001600160a01b031633145b610d035760405162461bcd60e51b815260206004820152601460248201527304e6f7420616c6c6f77656420746f2073776565760641b604482015260640161071d565b601354610100900460ff1615610d4d5760405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e481cddd9595c1959608a1b604482015260640161071d565b600c54421015610d9f5760405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f74207377656570206265666f726520657870697279000000000000604482015260640161071d565b6008546013805461ff0019166101001790556011546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015610deb573d6000803e3d6000fd5b5050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916107db918590610e26908690612535565b611d6b565b60135460ff1615610e715760405162461bcd60e51b815260206004820152601060248201526f10d85b5c185a59db8818589bdc9d195960821b604482015260640161071d565b601354640100000000900460ff16610ebd5760405162461bcd60e51b815260206004820152600f60248201526e139bdd081a5b9a5d1a585b1a5e9959608a1b604482015260640161071d565b60003411610eff5760405162461bcd60e51b815260206004820152600f60248201526e139bc81155d5081c1c9bdd9a591959608a1b604482015260640161071d565b6009544210610f3f5760405162461bcd60e51b815260206004820152600c60248201526b14da59db9d5c08115b99195960a21b604482015260640161071d565b600554600d5410610f855760405162461bcd60e51b815260206004820152601060248201526f12185c9918d85c08115e18d95959195960821b604482015260640161071d565b6012543360009081526015602052604090205410610fe55760405162461bcd60e51b815260206004820152601a60248201527f436f6e747269627574696f6e206c696d69742072656163686564000000000000604482015260640161071d565b6013546301000000900460ff161561100f5760405162461bcd60e51b815260040161071d90612452565b6014543410156110505760405162461bcd60e51b815260206004820152600c60248201526b56616c756520746f206c6f7760a01b604482015260640161071d565b61105c33600f546115dc565b6110995760405162461bcd60e51b815260206004820152600e60248201526d4e6f20706174726f6e20726f6c6560901b604482015260640161071d565b601254336000908152601560205260409020546110b7903490612535565b106112d457336000908152601560205260408120546012546110d9919061256e565b6110e3903461256e565b905060006110f1823461256e565b905060055481600d546111049190612535565b10611212576000600d5460055461111b919061256e565b611125908361256e565b90506000611133828461256e565b33600090815260156020526040812080549293508392909190611157908490612535565b909155506111679050338261205e565b604051428152819033907f55595f34fd936311e65eca0a752ee70068b8992fdf64918aff1b6345689c84e49060200160405180910390a37fef3402545c3e64e30583a48b60392700e20c20e1e2406dce9d340c9b54c476fc33346111cb8588612535565b6040516111da9392919061254d565b60405180910390a180600d60008282546111f49190612535565b9091555061120c90506112078386612535565b61213d565b50505050565b3360009081526015602052604081208054839290611231908490612535565b909155506112419050338261205e565b604051428152819033907f55595f34fd936311e65eca0a752ee70068b8992fdf64918aff1b6345689c84e49060200160405180910390a37fef3402545c3e64e30583a48b60392700e20c20e1e2406dce9d340c9b54c476fc3334846040516112ab9392919061254d565b60405180910390a180600d60008282546112c59190612535565b90915550610deb90508261213d565b60055434600d546112e59190612535565b10611338576000600d546005546112fc919061256e565b611306903461256e565b90506000611314823461256e565b33600090815260156020526040812080549293508392909190611231908490612535565b3360009081526015602052604081208054349290611357908490612535565b9091555050604051428152349033907f55595f34fd936311e65eca0a752ee70068b8992fdf64918aff1b6345689c84e49060200160405180910390a361139d333461205e565b34600d60008282546113af9190612535565b9091555050565b6113bf81611890565b50565b6001600160a01b031660009081526020819052604090205490565b60006113e9833361067b565b9050818110156114475760405162461bcd60e51b8152602060048201526024808201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604482015263616e636560e01b606482015260840161071d565b6114548333848403611d6b565b61145e838361216a565b505050565b6010546001600160a01b0316331461148d5760405162461bcd60e51b815260040161071d906124b3565b6013546301000000900460ff16156114b75760405162461bcd60e51b815260040161071d90612452565b6013805463ff0000001916630100000017905560408051818152600e918101919091526d18dbdb9d1c9858dd14185d5cd95960921b60608201524260208201527f5921431fa16f8be49d0a0175ba96d394094d37c61ef3ecd3985329c254cd108a906080015b60405180910390a1565b60606004805461074b9061247e565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156115b85760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161071d565b6115c53385858403611d6b565b5060019392505050565b60006107db338484611e8f565b601354604051634aefbd8f60e11b81526000916501000000000090046001600160a01b03169081906395df7b1e9061161d908790879060019060040161254d565b602060405180830381865afa15801561163a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061165e9190612585565b949350505050565b6010546001600160a01b031633146116905760405162461bcd60e51b815260040161071d906124b3565b601354640100000000900460ff16156116e15760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b604482015260640161071d565b600082116117315760405162461bcd60e51b815260206004820152601860248201527f77726f6e6720636f6e747269627574696f6e206c696d69740000000000000000604482015260640161071d565b818310156117745760405162461bcd60e51b815260206004820152601060248201526f12185c9918d85c08115e18d95959195960821b604482015260640161071d565b8688106117b95760405162461bcd60e51b815260206004820152601360248201527257726f6e67207369676e757020636f6e66696760681b604482015260640161071d565b8686116118085760405162461bcd60e51b815260206004820152601a60248201527f5374617274206665626f7265207369676e757020706572696f64000000000000604482015260640161071d565b60068590556005839055600a8690556009879055600b8890556013805464ff00000000191664010000000017905560128290556014819055600c84905560408051428152602081018890529081018690527f2942eb7be804ba7efe93e5b8f2e1b0bcde0a25deae1aabcad7ddd8b307bff90d9060600160405180910390a15050505050505050565b6013546301000000900460ff16156118ba5760405162461bcd60e51b815260040161071d90612452565b60135460ff16806118cc5750600a5442105b806118d8575060065442115b61191c5760405162461bcd60e51b815260206004820152601560248201527415da5d1a191c985ddcc81b9bdd08185b1b1bddd959605a1b604482015260640161071d565b61192833600f546115dc565b6119655760405162461bcd60e51b815260206004820152600e60248201526d4e6f20706174726f6e20726f6c6560901b604482015260640161071d565b80600081116119ae5760405162461bcd60e51b8152602060048201526015602482015274195c9c9bdc8e881dda5d1a191c985dc80c081155d5605a1b604482015260640161071d565b6119b7336113c2565b6119f95760405162461bcd60e51b81526020600482015260136024820152724e6f206465706f736974206174207374616b6560681b604482015260640161071d565b80611a03336113c2565b1015611a4b5760405162461bcd60e51b81526020600482015260176024820152764e6f7420656e6f75676820455754206174207374616b6560481b604482015260640161071d565b6000611a5683611c21565b9050611a62338461216a565b82600d6000828254611a74919061256e565b90915550503360009081526015602052604081208054859290611a9890849061256e565b9091555050604051339082156108fc029083906000818181858888f19350505050158015611aca573d6000803e3d6000fd5b50604051428152819033907f92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc69060200160405180910390a37f40ec41b547e3a769f863d660b593350eb4ce5d779b1c4e3f112eefc40c8e81d8338442604051611b359392919061254d565b60405180910390a1505050565b6010546001600160a01b03163314611b6c5760405162461bcd60e51b815260040161071d906124b3565b6013546301000000900460ff16611bbb5760405162461bcd60e51b815260206004820152601360248201527210dbdb9d1c9858dd081b9bdd0814185d5cd959606a1b604482015260640161071d565b6013805463ff00000019169055604080518181526010918101919091526f18dbdb9d1c9858dd155b9c185d5cd95960821b60608201524260208201527f5921431fa16f8be49d0a0175ba96d394094d37c61ef3ecd3985329c254cd108a9060800161151d565b60008160008111611c6c5760405162461bcd60e51b8152602060048201526015602482015274195c9c9bdc8e881dda5d1a191c985dc80c081155d5605a1b604482015260640161071d565b611c75336113c2565b611cb75760405162461bcd60e51b81526020600482015260136024820152724e6f206465706f736974206174207374616b6560681b604482015260640161071d565b80611cc1336113c2565b1015611d095760405162461bcd60e51b81526020600482015260176024820152764e6f7420656e6f75676820455754206174207374616b6560481b604482015260640161071d565b60135460ff16158015611d1d575060075415155b15611d61576000611d2f8460646124f4565b905083611d3e6103e883612513565b611d489190612535565b925080600754611d58919061256e565b60085550611d65565b8291505b50919050565b6001600160a01b038316611dcd5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161071d565b6001600160a01b038216611e2e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161071d565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316611ef35760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161071d565b6001600160a01b038216611f555760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161071d565b6001600160a01b03831660009081526020819052604090205481811015611fcd5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161071d565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290612004908490612535565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161205091815260200190565b60405180910390a350505050565b6001600160a01b0382166120b45760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161071d565b80600260008282546120c69190612535565b90915550506001600160a01b038216600090815260208190526040812080548392906120f3908490612535565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b604051339082156108fc029083906000818181858888f19350505050158015610deb573d6000803e3d6000fd5b6001600160a01b0382166121ca5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161071d565b6001600160a01b0382166000908152602081905260409020548181101561223e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161071d565b6001600160a01b038316600090815260208190526040812083830390556002805484929061226d90849061256e565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b600060208083528351808285015260005b818110156122e5578581018301518582016040015282016122c9565b818111156122f7576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461232457600080fd5b919050565b6000806040838503121561233c57600080fd5b6123458361230d565b946020939093013593505050565b60008060006060848603121561236857600080fd5b6123718461230d565b925061237f6020850161230d565b9150604084013590509250925092565b6000602082840312156123a157600080fd5b5035919050565b6000602082840312156123ba57600080fd5b6123c38261230d565b9392505050565b600080600080600080600080610100898b0312156123e757600080fd5b505086359860208801359850604088013597606081013597506080810135965060a0810135955060c0810135945060e0013592509050565b6000806040838503121561243257600080fd5b61243b8361230d565b91506124496020840161230d565b90509250929050565b60208082526012908201527121b7b73a3930b1ba1034b990333937bd32b760711b604082015260600190565b600181811c9082168061249257607f821691505b60208210811415611d6557634e487b7160e01b600052602260045260246000fd5b60208082526011908201527026bab9ba103132903a34329030b236b4b760791b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561250e5761250e6124de565b500290565b60008261253057634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115612548576125486124de565b500190565b6001600160a01b039390931683526020830191909152604082015260600190565b600082821015612580576125806124de565b500390565b60006020828403121561259757600080fd5b815180151581146123c357600080fdfea2646970667358221220fc0d082dd2a10a8e7afbd911dff395713b489fa78da2ace9cfb85aea1b86a86264736f6c634300080c0033";

export class Staking__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _claimManager: string,
    _rewardProvider: string,
    _serviceRole: BytesLike,
    _patronRole: BytesLike,
    tokenName: string,
    tokenSymbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Staking> {
    return super.deploy(
      _claimManager,
      _rewardProvider,
      _serviceRole,
      _patronRole,
      tokenName,
      tokenSymbol,
      overrides || {}
    ) as Promise<Staking>;
  }
  getDeployTransaction(
    _claimManager: string,
    _rewardProvider: string,
    _serviceRole: BytesLike,
    _patronRole: BytesLike,
    tokenName: string,
    tokenSymbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _claimManager,
      _rewardProvider,
      _serviceRole,
      _patronRole,
      tokenName,
      tokenSymbol,
      overrides || {}
    );
  }
  attach(address: string): Staking {
    return super.attach(address) as Staking;
  }
  connect(signer: Signer): Staking__factory {
    return super.connect(signer) as Staking__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new utils.Interface(_abi) as StakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Staking {
    return new Contract(address, _abi, signerOrProvider) as Staking;
  }
}
