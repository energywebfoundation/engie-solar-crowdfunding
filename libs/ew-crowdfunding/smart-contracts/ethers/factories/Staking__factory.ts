/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BytesLike,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Staking, StakingInterface } from "../Staking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_claimManager",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_serviceRole",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_patronRole",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "tokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "tokenSymbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "CampaignAborted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amout",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "Funded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "refunded",
        type: "uint256",
      },
    ],
    name: "RefundExceeded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
    ],
    name: "RewardSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "initDate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_startDate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_endDate",
        type: "uint256",
      },
    ],
    name: "StakingPoolInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "statusType",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "date",
        type: "uint256",
      },
    ],
    name: "StatusChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amout",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "TokenBurnt",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amout",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimManagerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contributionLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "depositRewards",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "endDate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hardCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_provider",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_role",
        type: "bytes32",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_signupStart",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_signupEnd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_hardCap",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_contributionLimit",
        type: "uint256",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "patronRole",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "redeem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "redeemAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "serviceRole",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "signupEnd",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "startDate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "terminate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unPause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620021fa380380620021fa83398101604081905262000034916200020e565b8151829082906200004d906003906020850190620000b5565b50805162000063906004906020840190620000b5565b5050600c80546001600160a01b031916331790555050600f80546001600160a01b03959095166301000000026301000000600160b81b031990951694909417909355600a91909155600b5550620002fc565b828054620000c390620002a9565b90600052602060002090601f016020900481019282620000e7576000855562000132565b82601f106200010257805160ff191683800117855562000132565b8280016001018555821562000132579182015b828111156200013257825182559160200191906001019062000115565b506200014092915062000144565b5090565b5b8082111562000140576000815560010162000145565b600082601f8301126200016c578081fd5b81516001600160401b0380821115620001895762000189620002e6565b604051601f8301601f19908116603f01168101908282118183101715620001b457620001b4620002e6565b81604052838152602092508683858801011115620001d0578485fd5b8491505b83821015620001f35785820183015181830184015290820190620001d4565b838211156200020457848385830101525b9695505050505050565b600080600080600060a0868803121562000226578081fd5b85516001600160a01b03811681146200023d578182fd5b60208701516040880151606089015192975090955093506001600160401b038082111562000269578283fd5b6200027789838a016200015b565b935060808801519150808211156200028d578283fd5b506200029c888289016200015b565b9150509295509295909350565b600181811c90821680620002be57607f821691505b60208210811415620002e057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b611eee806200030c6000396000f3fe6080604052600436106101e25760003560e01c806370a0823111610102578063a9059cbb11610095578063dd2f35e911610064578063dd2f35e9146104fb578063dd62ed3e14610511578063f7b188a514610557578063fb86a4041461056c57600080fd5b8063a9059cbb14610485578063ac4ab3fb146104a5578063c24a0f8b146104c5578063db006a75146104db57600080fd5b806395d89b41116100d157806395d89b411461041a5780639db1e4611461042f5780639ec5a8941461044f578063a457c2d71461046557600080fd5b806370a08231146103af5780637332e077146103cf57806379cc6790146103e55780638456cb591461040557600080fd5b80631aeae7ba1161017a578063395093511161014957806339509351146103515780633a4b66f11461037157806342966c68146103795780634a3642a51461039957600080fd5b80631aeae7ba146102ea57806323b872dd146103005780632f4350c214610320578063313ce5671461033557600080fd5b80630b97bc86116101b65780630b97bc86146102a05780630c08bf88146102b6578063152111f7146102cd57806318160ddd146102d557600080fd5b806216ee16146101e75780630572b0cc1461022b57806306fdde031461024e578063095ea7b314610270575b600080fd5b3480156101f357600080fd5b50600f5461020e90630100000090046001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561023757600080fd5b50610240610582565b604051908152602001610222565b34801561025a57600080fd5b506102636105cc565b6040516102229190611d4f565b34801561027c57600080fd5b5061029061028b366004611c8b565b61065e565b6040519015158152602001610222565b3480156102ac57600080fd5b5061024060095481565b3480156102c257600080fd5b506102cb610674565b005b6102cb6107a9565b3480156102e157600080fd5b50600254610240565b3480156102f657600080fd5b50610240600a5481565b34801561030c57600080fd5b5061029061031b366004611c50565b610962565b34801561032c57600080fd5b506102cb610a0c565b34801561034157600080fd5b5060405160128152602001610222565b34801561035d57600080fd5b5061029061036c366004611c8b565b610a42565b6102cb610a7e565b34801561038557600080fd5b506102cb610394366004611cd4565b610d53565b3480156103a557600080fd5b5061024060085481565b3480156103bb57600080fd5b506102406103ca366004611bfd565b610d60565b3480156103db57600080fd5b50610240600e5481565b3480156103f157600080fd5b506102cb610400366004611c8b565b610d7b565b34801561041157600080fd5b506102cb610e01565b34801561042657600080fd5b50610263610eff565b34801561043b57600080fd5b506102cb61044a366004611cec565b610f0e565b34801561045b57600080fd5b5061024060075481565b34801561047157600080fd5b50610290610480366004611c8b565b611121565b34801561049157600080fd5b506102906104a0366004611c8b565b6111ba565b3480156104b157600080fd5b506102906104c0366004611c8b565b6111c7565b3480156104d157600080fd5b5061024060065481565b3480156104e757600080fd5b506102cb6104f6366004611cd4565b61125e565b34801561050757600080fd5b50610240600b5481565b34801561051d57600080fd5b5061024061052c366004611c1e565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b34801561056357600080fd5b506102cb6114d6565b34801561057857600080fd5b5061024060055481565b600f54600090610100900460ff16156105b65760405162461bcd60e51b81526004016105ad90611dcd565b60405180910390fd5b6105c76105c233610d60565b6115b1565b905090565b6060600380546105db90611e67565b80601f016020809104026020016040519081016040528092919081815260200182805461060790611e67565b80156106545780601f1061062957610100808354040283529160200191610654565b820191906000526020600020905b81548152906001019060200180831161063757829003601f168201915b5050505050905090565b600061066b3384846116c1565b50600192915050565b600c546001600160a01b0316331461069e5760405162461bcd60e51b81526004016105ad90611da2565b600f5460ff16156106e65760405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e481d195c9b5a5b985d195960721b60448201526064016105ad565b600754801561072b57600d546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015610729573d6000803e3d6000fd5b505b61075f60006006819055600581905560098190556008819055600f8054600e92909255610100600160b81b03199091169055565b600f805460ff191660011790556040517f396ef65364c652a5186a005bb7dcf6aac4d2adcb6c6d0adf39a5f13104a2e3449061079e9042815260200190565b60405180910390a150565b600f5460ff16156107ef5760405162461bcd60e51b815260206004820152601060248201526f10d85b5c185a59db8818589bdc9d195960821b60448201526064016105ad565b60095442118015610801575060065442105b6108465760405162461bcd60e51b815260206004820152601660248201527510dbdb9d1c9858dd081b9bdd081858dd1a5d985d195960521b60448201526064016105ad565b6000341161088d5760405162461bcd60e51b8152602060048201526014602482015273139bdd081c995dd85c991cc81c1c9bdd9a59195960621b60448201526064016105ad565b61089933600a546111c7565b806108ae5750600c546001600160a01b031633145b6108fa5760405162461bcd60e51b815260206004820181905260248201527f4e6f7420656e726f6c6c656420617320736572766963652070726f766964657260448201526064016105ad565b346007600082825461090c9190611df9565b9091555050600d80546001600160a01b031916339081179091556040517f6379339f0ae63e95e65fad18ca2a7ec4e7e3f05f3cc5f7079f4d8da8cec34faa916109589134904290611d2e565b60405180910390a1565b600061096f8484846117e5565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156109f45760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084016105ad565b610a0185338584036116c1565b506001949350505050565b600f54610100900460ff1615610a345760405162461bcd60e51b81526004016105ad90611dcd565b610a406104f633610d60565b565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161066b918590610a79908690611df9565b6116c1565b600f5462010000900460ff16610ac85760405162461bcd60e51b815260206004820152600f60248201526e139bdd081a5b9a5d1a585b1a5e9959608a1b60448201526064016105ad565b60003411610b0a5760405162461bcd60e51b815260206004820152600f60248201526e139bc81155d5081c1c9bdd9a591959608a1b60448201526064016105ad565b6008544210610b4a5760405162461bcd60e51b815260206004820152600c60248201526b14da59db9d5c08115b99195960a21b60448201526064016105ad565b600e543360009081526010602052604090206001015410610bad5760405162461bcd60e51b815260206004820152601a60248201527f436f6e747269627574696f6e206c696d6974207265616368656400000000000060448201526064016105ad565b600f54610100900460ff1615610bd55760405162461bcd60e51b81526004016105ad90611dcd565b610be133600b546111c7565b610c1e5760405162461bcd60e51b815260206004820152600e60248201526d4e6f20706174726f6e20726f6c6560901b60448201526064016105ad565b600e5433600090815260106020526040902060010154610c3f903490611df9565b1115610d0d5733600090815260106020526040812060010154600e54610c659190611e50565b610c6f9034611e50565b600e5433600081815260106020526040902060010191909155909150610c9e90610c998334611e50565b6119b4565b604051339082156108fc029083906000818181858888f19350505050158015610ccb573d6000803e3d6000fd5b507fef3402545c3e64e30583a48b60392700e20c20e1e2406dce9d340c9b54c476fc333483604051610cff93929190611d2e565b60405180910390a150610d3f565b3360009081526010602052604081206001018054349290610d2f908490611df9565b90915550610d3f905033346119b4565b336000908152601060205260409020429055565b610d5d3382611a93565b50565b6001600160a01b031660009081526020819052604090205490565b6000610d87833361052c565b905081811015610de55760405162461bcd60e51b8152602060048201526024808201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604482015263616e636560e01b60648201526084016105ad565b610df283338484036116c1565b610dfc8383611a93565b505050565b600f5460ff1615610e475760405162461bcd60e51b815260206004820152601060248201526f10d85b5c185a59db8818589bdc9d195960821b60448201526064016105ad565b600c546001600160a01b03163314610e715760405162461bcd60e51b81526004016105ad90611da2565b600f54610100900460ff1615610e995760405162461bcd60e51b81526004016105ad90611dcd565b600f805461ff00191661010017905560408051818152600e918101919091526d18dbdb9d1c9858dd14185d5cd95960921b60608201524260208201527f5921431fa16f8be49d0a0175ba96d394094d37c61ef3ecd3985329c254cd108a90608001610958565b6060600480546105db90611e67565b600c546001600160a01b03163314610f385760405162461bcd60e51b81526004016105ad90611da2565b600f5462010000900460ff1615610f875760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b60448201526064016105ad565b60008111610fd75760405162461bcd60e51b815260206004820152601860248201527f77726f6e6720636f6e747269627574696f6e206c696d6974000000000000000060448201526064016105ad565b8082101561101a5760405162461bcd60e51b815260206004820152601060248201526f1a185c9910d85c08195e18d95959195960821b60448201526064016105ad565b84861061105f5760405162461bcd60e51b815260206004820152601360248201527257726f6e67207369676e757020636f6e66696760681b60448201526064016105ad565b8484116110ae5760405162461bcd60e51b815260206004820152601a60248201527f5374617274206665626f7265207369676e757020706572696f6400000000000060448201526064016105ad565b6006839055600582905560098490556008859055600f805462ff0000191662010000179055600e81905560408051428152602081018690529081018490527f2942eb7be804ba7efe93e5b8f2e1b0bcde0a25deae1aabcad7ddd8b307bff90d9060600160405180910390a1505050505050565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156111a35760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016105ad565b6111b033858584036116c1565b5060019392505050565b600061066b3384846117e5565b600f54604051634aefbd8f60e11b8152600091630100000090046001600160a01b03169081906395df7b1e906112069087908790600190600401611d2e565b60206040518083038186803b15801561121e57600080fd5b505afa158015611232573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112569190611cb4565b949350505050565b600f54610100900460ff16156112865760405162461bcd60e51b81526004016105ad90611dcd565b600f5460ff1680611298575060095442105b806112a4575060065442115b6112e85760405162461bcd60e51b815260206004820152601560248201527415da5d1a191c985ddcc81b9bdd08185b1b1bddd959605a1b60448201526064016105ad565b6112f433600b546111c7565b6113315760405162461bcd60e51b815260206004820152600e60248201526d4e6f20706174726f6e20726f6c6560901b60448201526064016105ad565b806000811161137a5760405162461bcd60e51b8152602060048201526015602482015274195c9c9bdc8e881dda5d1a191c985dc80c081155d5605a1b60448201526064016105ad565b61138333610d60565b6113c55760405162461bcd60e51b81526020600482015260136024820152724e6f206465706f736974206174207374616b6560681b60448201526064016105ad565b806113cf33610d60565b10156114175760405162461bcd60e51b81526020600482015260176024820152764e6f7420656e6f75676820455754206174207374616b6560481b60448201526064016105ad565b6000611422836115b1565b905061142d83610d53565b604051339082156108fc029083906000818181858888f1935050505015801561145a573d6000803e3d6000fd5b507f92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc633824260405161148e93929190611d2e565b60405180910390a17f40ec41b547e3a769f863d660b593350eb4ce5d779b1c4e3f112eefc40c8e81d83384426040516114c993929190611d2e565b60405180910390a1505050565b600c546001600160a01b031633146115005760405162461bcd60e51b81526004016105ad90611da2565b600f54610100900460ff1661154d5760405162461bcd60e51b815260206004820152601360248201527210dbdb9d1c9858dd081b9bdd0814185d5cd959606a1b60448201526064016105ad565b600f805461ff0019169055604080518181526010918101919091526f18dbdb9d1c9858dd155b9c185d5cd95960821b60608201524260208201527f5921431fa16f8be49d0a0175ba96d394094d37c61ef3ecd3985329c254cd108a90608001610958565b600081600081116115fc5760405162461bcd60e51b8152602060048201526015602482015274195c9c9bdc8e881dda5d1a191c985dc80c081155d5605a1b60448201526064016105ad565b61160533610d60565b6116475760405162461bcd60e51b81526020600482015260136024820152724e6f206465706f736974206174207374616b6560681b60448201526064016105ad565b8061165133610d60565b10156116995760405162461bcd60e51b81526020600482015260176024820152764e6f7420656e6f75676820455754206174207374616b6560481b60448201526064016105ad565b60006005546007546116ab9190611e11565b6116b59085611e31565b90506112568185611df9565b6001600160a01b0383166117235760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105ad565b6001600160a01b0382166117845760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105ad565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166118495760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105ad565b6001600160a01b0382166118ab5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105ad565b6001600160a01b038316600090815260208190526040902054818110156119235760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016105ad565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061195a908490611df9565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516119a691815260200190565b60405180910390a350505050565b6001600160a01b038216611a0a5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016105ad565b8060026000828254611a1c9190611df9565b90915550506001600160a01b03821660009081526020819052604081208054839290611a49908490611df9565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216611af35760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016105ad565b6001600160a01b03821660009081526020819052604090205481811015611b675760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016105ad565b6001600160a01b0383166000908152602081905260408120838303905560028054849290611b96908490611e50565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b80356001600160a01b0381168114611bf857600080fd5b919050565b600060208284031215611c0e578081fd5b611c1782611be1565b9392505050565b60008060408385031215611c30578081fd5b611c3983611be1565b9150611c4760208401611be1565b90509250929050565b600080600060608486031215611c64578081fd5b611c6d84611be1565b9250611c7b60208501611be1565b9150604084013590509250925092565b60008060408385031215611c9d578182fd5b611ca683611be1565b946020939093013593505050565b600060208284031215611cc5578081fd5b81518015158114611c17578182fd5b600060208284031215611ce5578081fd5b5035919050565b60008060008060008060c08789031215611d04578182fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b6001600160a01b039390931683526020830191909152604082015260600190565b6000602080835283518082850152825b81811015611d7b57858101830151858201604001528201611d5f565b81811115611d8c5783604083870101525b50601f01601f1916929092016040019392505050565b60208082526011908201527026bab9ba103132903a34329030b236b4b760791b604082015260600190565b60208082526012908201527121b7b73a3930b1ba1034b990333937bd32b760711b604082015260600190565b60008219821115611e0c57611e0c611ea2565b500190565b600082611e2c57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611e4b57611e4b611ea2565b500290565b600082821015611e6257611e62611ea2565b500390565b600181811c90821680611e7b57607f821691505b60208210811415611e9c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea264697066735822122098c8467b9f22b4a8ac201f0cc4c6c2f9a759cb433694cd70e719bd1cb90289cd64736f6c63430008040033";

export class Staking__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _claimManager: string,
    _serviceRole: BytesLike,
    _patronRole: BytesLike,
    tokenName: string,
    tokenSymbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Staking> {
    return super.deploy(
      _claimManager,
      _serviceRole,
      _patronRole,
      tokenName,
      tokenSymbol,
      overrides || {}
    ) as Promise<Staking>;
  }
  getDeployTransaction(
    _claimManager: string,
    _serviceRole: BytesLike,
    _patronRole: BytesLike,
    tokenName: string,
    tokenSymbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _claimManager,
      _serviceRole,
      _patronRole,
      tokenName,
      tokenSymbol,
      overrides || {}
    );
  }
  attach(address: string): Staking {
    return super.attach(address) as Staking;
  }
  connect(signer: Signer): Staking__factory {
    return super.connect(signer) as Staking__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new utils.Interface(_abi) as StakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Staking {
    return new Contract(address, _abi, signerOrProvider) as Staking;
  }
}
