/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BytesLike,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Staking, StakingInterface } from "../Staking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_claimManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewardProvider",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_serviceRole",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_patronRole",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "tokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "tokenSymbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "CampaignAborted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_amout",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "NewStake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "refunded",
        type: "uint256",
      },
    ],
    name: "RefundExceeded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
    ],
    name: "RewardSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "initDate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_startDate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_endDate",
        type: "uint256",
      },
    ],
    name: "StakingPoolInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "statusType",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "date",
        type: "uint256",
      },
    ],
    name: "StatusChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_date",
        type: "uint256",
      },
    ],
    name: "Swept",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amout",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "TokenBurnt",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_amout",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "aborted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "allRedeemedRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimManagerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contributionLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "depositRewards",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "endDate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fullStopDate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getContractStatus",
    outputs: [
      {
        internalType: "bool",
        name: "_isContractInitialized",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "_isContractPaused",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "_isContractAborted",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hardCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_provider",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_role",
        type: "bytes32",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_signupStart",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_signupEnd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_fullStopDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_hardCap",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_contributionLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minRequiredStake",
        type: "uint256",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "minRequiredStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "patronRole",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "redeem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "redeemAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "serviceRole",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "signupEnd",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "signupStart",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "startDate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sweep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sweeped",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "terminate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unPause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002baf38038062002baf83398101604081905262000034916200025e565b8151829082906200004d906003906020850190620000ce565b50805162000063906004906020840190620000ce565b50506005805462010000600160b01b031990811633620100009081029190911790925560138054610100600160a81b0319166101006001600160a01b039b8c1602179055600d96909655600a949094555050601080549093169390941602919091179055506200033e565b828054620000dc9062000301565b90600052602060002090601f0160209004810192826200010057600085556200014b565b82601f106200011b57805160ff19168380011785556200014b565b828001600101855582156200014b579182015b828111156200014b5782518255916020019190600101906200012e565b50620001599291506200015d565b5090565b5b808211156200015957600081556001016200015e565b80516001600160a01b03811681146200018c57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001b957600080fd5b81516001600160401b0380821115620001d657620001d662000191565b604051601f8301601f19908116603f0116810190828211818310171562000201576200020162000191565b816040528381526020925086838588010111156200021e57600080fd5b600091505b8382101562000242578582018301518183018401529082019062000223565b83821115620002545760008385830101525b9695505050505050565b60008060008060008060c087890312156200027857600080fd5b620002838762000174565b9550620002936020880162000174565b6040880151606089015160808a015192975090955093506001600160401b0380821115620002c057600080fd5b620002ce8a838b01620001a7565b935060a0890151915080821115620002e557600080fd5b50620002f489828a01620001a7565b9150509295509295509295565b600181811c908216806200031657607f821691505b602082108114156200033857634e487b7160e01b600052602260045260246000fd5b50919050565b612861806200034e6000396000f3fe60806040526004361061025b5760003560e01c806379cc679011610144578063c032846b116100b6578063db006a751161007a578063db006a751461069b578063dd2f35e9146106bb578063dd62ed3e146106d1578063eb01393314610717578063f7b188a514610731578063fb86a4041461074657600080fd5b8063c032846b146105e4578063c11aae8c1461062d578063c24a0f8b1461064d578063c399ec8814610663578063ce45ed261461068557600080fd5b80638da5cb5b116101085780638da5cb5b1461053357806395d89b4114610559578063a457c2d71461056e578063a9059cbb1461058e578063ac4ab3fb146105ae578063af63dda4146105ce57600080fd5b806379cc6790146104b35780637c0e77ac146104d357806380b62b70146104e9578063817b1cd2146105085780638456cb591461051e57600080fd5b806323b872dd116101dd57806339509351116101a157806339509351146104095780633a4b66f11461042957806342966c68146104315780634a3642a51461045157806370a08231146104675780637332e0771461049d57600080fd5b806323b872dd1461038d5780632f4350c2146103ad578063313ce567146103c257806335faa416146103de578063386db479146103f357600080fd5b80630c08bf88116102245780630c08bf881461032d5780630e15561a14610344578063152111f71461035a57806318160ddd146103625780631aeae7ba1461037757600080fd5b806216ee16146102605780630572b0cc146102a257806306fdde03146102c5578063095ea7b3146102e75780630b97bc8614610317575b600080fd5b34801561026c57600080fd5b506013546102859061010090046001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156102ae57600080fd5b506102b761075c565b604051908152602001610299565b3480156102d157600080fd5b506102da61077e565b6040516102999190612516565b3480156102f357600080fd5b50610307610302366004612587565b610810565b6040519015158152602001610299565b34801561032357600080fd5b506102b760095481565b34801561033957600080fd5b50610342610826565b005b34801561035057600080fd5b506102b7600e5481565b610342610a08565b34801561036e57600080fd5b506002546102b7565b34801561038357600080fd5b506102b7600d5481565b34801561039957600080fd5b506103076103a83660046125b1565b610c63565b3480156103b957600080fd5b50610342610d0d565b3480156103ce57600080fd5b5060405160128152602001610299565b3480156103ea57600080fd5b50610342610d50565b3480156103ff57600080fd5b506102b760125481565b34801561041557600080fd5b50610307610424366004612587565b610f23565b610342610f5f565b34801561043d57600080fd5b5061034261044c3660046125ed565b61165c565b34801561045d57600080fd5b506102b760085481565b34801561047357600080fd5b506102b7610482366004612606565b6001600160a01b031660009081526020819052604090205490565b3480156104a957600080fd5b506102b760115481565b3480156104bf57600080fd5b506103426104ce366004612587565b611665565b3480156104df57600080fd5b506102b760145481565b3480156104f557600080fd5b5060055461030790610100900460ff1681565b34801561051457600080fd5b506102b7600c5481565b34801561052a57600080fd5b506103426116e6565b34801561053f57600080fd5b50600554610285906201000090046001600160a01b031681565b34801561056557600080fd5b506102da6117aa565b34801561057a57600080fd5b50610307610589366004612587565b6117b9565b34801561059a57600080fd5b506103076105a9366004612587565b611852565b3480156105ba57600080fd5b506103076105c9366004612587565b6118a2565b3480156105da57600080fd5b506102b7600b5481565b3480156105f057600080fd5b5060135460105460055460ff9283169261010092839004811692909104166040805193151584529115156020840152151590820152606001610299565b34801561063957600080fd5b50610342610648366004612628565b611928565b34801561065957600080fd5b506102b760075481565b34801561066f57600080fd5b50336000908152601560205260409020546102b7565b34801561069157600080fd5b506102b7600f5481565b3480156106a757600080fd5b506103426106b63660046125ed565b611b97565b3480156106c757600080fd5b506102b7600a5481565b3480156106dd57600080fd5b506102b76106ec36600461267d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b34801561072357600080fd5b506005546103079060ff1681565b34801561073d57600080fd5b50610342611e89565b34801561075257600080fd5b506102b760065481565b33600090815260208190526040812054819061077790611f68565b5092915050565b60606003805461078d906126b0565b80601f01602080910402602001604051908101604052809291908181526020018280546107b9906126b0565b80156108065780601f106107db57610100808354040283529160200191610806565b820191906000526020600020905b8154815290600101906020018083116107e957829003601f168201915b5050505050905090565b600061081d338484611fc8565b50600192915050565b6005546201000090046001600160a01b0316331461085f5760405162461bcd60e51b8152600401610856906126eb565b60405180910390fd5b600554610100900460ff16156108ac5760405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e481d195c9b5a5b985d195960721b6044820152606401610856565b60075442106108fd5760405162461bcd60e51b815260206004820152601f60248201527f4572726f723a2063616e63656c696e672061667465722063616d706169676e006044820152606401610856565b600e546005805461ff001916610100179055610933600060068190556008819055600e8190556010805461ff0019169055601155565b801561097a57601054604051620100009091046001600160a01b0316906108fc8315029083906000818181858888f19350505050158015610978573d6000803e3d6000fd5b505b60408051818152600f818301526e18d85b5c185a59db90589bdc9d1959608a1b606082015242602082015290517f5921431fa16f8be49d0a0175ba96d394094d37c61ef3ecd3985329c254cd108a9181900360800190a16040514281527f396ef65364c652a5186a005bb7dcf6aac4d2adcb6c6d0adf39a5f13104a2e344906020015b60405180910390a150565b6000600c546078610a19919061272c565b9050610a276103e88261274b565b341015610a6b5760405162461bcd60e51b81526020600482015260126024820152714e6f7420456e6f756768207265776172647360701b6044820152606401610856565b600554610100900460ff1615610ab65760405162461bcd60e51b815260206004820152601060248201526f10d85b5c185a59db8818589bdc9d195960821b6044820152606401610856565b6009544210158015610ac9575060075442105b610b0e5760405162461bcd60e51b815260206004820152601660248201527510dbdb9d1c9858dd081b9bdd081858dd1a5d985d195960521b6044820152606401610856565b60105460ff1615610b525760405162461bcd60e51b815260206004820152600e60248201526d105b1c9958591e48199d5b99195960921b6044820152606401610856565b60003411610b985760405162461bcd60e51b8152602060048201526013602482015272139bc81c995dd85c991cc81c1c9bdd9a591959606a1b6044820152606401610856565b610ba433600d546118a2565b80610bbf57506010546201000090046001600160a01b031633145b610c0b5760405162461bcd60e51b815260206004820181905260248201527f4e6f7420656e726f6c6c656420617320736572766963652070726f76696465726044820152606401610856565b34600e6000828254610c1d919061276d565b90915550506010805460ff191660011790556040517f6379339f0ae63e95e65fad18ca2a7ec4e7e3f05f3cc5f7079f4d8da8cec34faa906109fd90339034904290612785565b6000610c708484846120ec565b6001600160a01b038416600090815260016020908152604080832033845290915290205482811015610cf55760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b6064820152608401610856565b610d028533858403611fc8565b506001949350505050565b601054610100900460ff1615610d355760405162461bcd60e51b8152600401610856906127a6565b33600090815260208190526040902054610d4e90611b97565b565b610d5c33600d546118a2565b80610d7757506010546201000090046001600160a01b031633145b610dba5760405162461bcd60e51b815260206004820152601460248201527304e6f7420616c6c6f77656420746f2073776565760641b6044820152606401610856565b60055460ff1615610dff5760405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e481cddd9595c1959608a1b6044820152606401610856565b600f54421015610e515760405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f74207377656570206265666f7265206578706972790000000000006044820152606401610856565b6000601254600e54610e6391906127d2565b600c546005805460ff19166001179055909150610e9a600060068190556008819055600e8190556010805461ff0019169055601155565b6000600c556010546201000090046001600160a01b03166108fc610ebe838561276d565b6040518115909202916000818181858888f19350505050158015610ee6573d6000803e3d6000fd5b50604080518381524260208201527f8ca6abf6b1c0bd37b098133cb9c8a94eb36b3f0f859bbca87c56b032880f5b35910160405180910390a15050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161081d918590610f5a90869061276d565b611fc8565b600554610100900460ff1615610faa5760405162461bcd60e51b815260206004820152601060248201526f10d85b5c185a59db8818589bdc9d195960821b6044820152606401610856565b60135460ff16610fee5760405162461bcd60e51b815260206004820152600f60248201526e139bdd081a5b9a5d1a585b1a5e9959608a1b6044820152606401610856565b600034116110305760405162461bcd60e51b815260206004820152600f60248201526e139bc81155d5081c1c9bdd9a591959608a1b6044820152606401610856565b60085442106110705760405162461bcd60e51b815260206004820152600c60248201526b14da59db9d5c08115b99195960a21b6044820152606401610856565b600654600c54106110b65760405162461bcd60e51b815260206004820152601060248201526f12185c9918d85c08115e18d95959195960821b6044820152606401610856565b60115433600090815260156020526040902054106111165760405162461bcd60e51b815260206004820152601a60248201527f436f6e747269627574696f6e206c696d697420726561636865640000000000006044820152606401610856565b601054610100900460ff161561113e5760405162461bcd60e51b8152600401610856906127a6565b60145434101561117f5760405162461bcd60e51b815260206004820152600c60248201526b56616c756520746f206c6f7760a01b6044820152606401610856565b61118b33600a546118a2565b6111c85760405162461bcd60e51b815260206004820152600e60248201526d4e6f20706174726f6e20726f6c6560901b6044820152606401610856565b601154336000908152601560205260409020546111e690349061276d565b11156114c0576011543360009081526015602052604081205490919061120c903461276d565b61121691906127d2565b60065433600090815260156020526040902054601154600c549394509192909161123f9161276d565b61124991906127d2565b11156113a35760065433600090815260156020526040812054600c54601154929392611275919061276d565b61127f91906127d2565b61128991906127d2565b90506112a433600c5460065461129f91906127d2565b6122bb565b600c546006546112b491906127d2565b604051428152339060008051602061280c8339815191529060200160405180910390a37fef3402545c3e64e30583a48b60392700e20c20e1e2406dce9d340c9b54c476fc3334611304848661276d565b60405161131393929190612785565b60405180910390a16000600654600c543461132e919061276d565b61133891906127d2565b9050600c5460065461134a91906127d2565b336000908152601560205260408120805490919061136990849061276d565b9091555050600c5460065461137e91906127d2565b600c600082825461138f919061276d565b9091555061139e90508161239b565b505050565b336000818152601560205260409020546011546113c4929161129f916127d2565b336000908152601560205260409020546011546113e191906127d2565b604051428152339060008051602061280c8339815191529060200160405180910390a37fef3402545c3e64e30583a48b60392700e20c20e1e2406dce9d340c9b54c476fc33348360405161143793929190612785565b60405180910390a13360009081526015602052604090205460115461145c91906127d2565b600c600082825461146d919061276d565b90915550503360009081526015602052604090205460115461148f91906127d2565b33600090815260156020526040812080549091906114ae90849061276d565b909155506114bd90508161239b565b50565b60065434600c546114d1919061276d565b11156115f057600c546006546114e791906127d2565b336000908152601560205260408120805490919061150690849061276d565b9250508190555061152133600c5460065461129f91906127d2565b600c5460065461153191906127d2565b604051428152339060008051602061280c8339815191529060200160405180910390a37fef3402545c3e64e30583a48b60392700e20c20e1e2406dce9d340c9b54c476fc3334600c5460065461158791906127d2565b61159190346127d2565b6040516115a093929190612785565b60405180910390a1600c546006546115b891906127d2565b600c60008282546115c9919061276d565b9091555050600c54600654610d4e916115e1916127d2565b6115eb90346127d2565b61239b565b336000908152601560205260408120805434929061160f90849061276d565b90915550506040514281523490339060008051602061280c8339815191529060200160405180910390a361164333346122bb565b34600c6000828254611655919061276d565b9091555050565b6114bd81611b97565b600061167183336106ec565b9050818110156116cf5760405162461bcd60e51b8152602060048201526024808201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604482015263616e636560e01b6064820152608401610856565b6116dc8333848403611fc8565b61139e83836123c8565b6005546201000090046001600160a01b031633146117165760405162461bcd60e51b8152600401610856906126eb565b601054610100900460ff161561173e5760405162461bcd60e51b8152600401610856906127a6565b6010805461ff00191661010017905560408051818152600e918101919091526d18dbdb9d1c9858dd14185d5cd95960921b60608201524260208201527f5921431fa16f8be49d0a0175ba96d394094d37c61ef3ecd3985329c254cd108a906080015b60405180910390a1565b60606004805461078d906126b0565b3360009081526001602090815260408083206001600160a01b03861684529091528120548281101561183b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610856565b6118483385858403611fc8565b5060019392505050565b6001600160a01b03821660009081526015602052604081208054839190839061187c90849061276d565b90915550503360008181526015602052604090208054849003905561081d9084846120ec565b601354604051634aefbd8f60e11b815260009161010090046001600160a01b03169081906395df7b1e906118df9087908790600190600401612785565b602060405180830381865afa1580156118fc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061192091906127e9565b949350505050565b6005546201000090046001600160a01b031633146119585760405162461bcd60e51b8152600401610856906126eb565b60135460ff16156119a15760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b6044820152606401610856565b600082116119f15760405162461bcd60e51b815260206004820152601860248201527f77726f6e6720636f6e747269627574696f6e206c696d697400000000000000006044820152606401610856565b81831015611a345760405162461bcd60e51b815260206004820152601060248201526f12185c9918d85c08115e18d95959195960821b6044820152606401610856565b868810611a795760405162461bcd60e51b815260206004820152601360248201527257726f6e67207369676e757020636f6e66696760681b6044820152606401610856565b868611611ac85760405162461bcd60e51b815260206004820152601a60248201527f5374617274206665626f7265207369676e757020706572696f640000000000006044820152606401610856565b848411611b175760405162461bcd60e51b815260206004820152601760248201527f46756c6c53746f70206265666f726520656e64446174650000000000000000006044820152606401610856565b6007859055600683905560098690556008879055600b8890556013805460ff1916600117905560118290556014819055600f84905560408051428152602081018890529081018690527f2942eb7be804ba7efe93e5b8f2e1b0bcde0a25deae1aabcad7ddd8b307bff90d9060600160405180910390a15050505050505050565b601054610100900460ff1615611bbf5760405162461bcd60e51b8152600401610856906127a6565b600554610100900460ff1680611bd6575060095442105b80611bef57506007544210158015611bef5750600f5442105b611c335760405162461bcd60e51b815260206004820152601560248201527415da5d1a191c985ddcc81b9bdd08185b1b1bddd959605a1b6044820152606401610856565b611c3f33600a546118a2565b611c7c5760405162461bcd60e51b815260206004820152600e60248201526d4e6f20706174726f6e20726f6c6560901b6044820152606401610856565b8060008111611cc55760405162461bcd60e51b8152602060048201526015602482015274195c9c9bdc8e881dda5d1a191c985dc80c081155d5605a1b6044820152606401610856565b33600090815260208190526040902054611d175760405162461bcd60e51b81526020600482015260136024820152724e6f206465706f736974206174207374616b6560681b6044820152606401610856565b33600090815260208190526040902054811115611d765760405162461bcd60e51b815260206004820152601760248201527f4e6f7420656e6f75676820455754206174207374616b650000000000000000006044820152606401610856565b600080611d8284611f68565b915091508060126000828254611d98919061276d565b90915550611da8905033856123c8565b83600c6000828254611dba91906127d2565b90915550503360009081526015602052604081208054869290611dde9084906127d2565b9091555050604051339083156108fc029084906000818181858888f19350505050158015611e10573d6000803e3d6000fd5b50604051428152829033907f92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc69060200160405180910390a37f40ec41b547e3a769f863d660b593350eb4ce5d779b1c4e3f112eefc40c8e81d8338542604051611e7b93929190612785565b60405180910390a150505050565b6005546201000090046001600160a01b03163314611eb95760405162461bcd60e51b8152600401610856906126eb565b601054610100900460ff16611f065760405162461bcd60e51b815260206004820152601360248201527210dbdb9d1c9858dd081b9bdd0814185d5cd959606a1b6044820152606401610856565b6010805461ff001916815560408051818152908101919091526f18dbdb9d1c9858dd155b9c185d5cd95960821b60608201524260208201527f5921431fa16f8be49d0a0175ba96d394094d37c61ef3ecd3985329c254cd108a906080016117a0565b6005546000908190610100900460ff16158015611f865750600e5415155b8015611f9157508215155b15611fbf57611fa1600a8461274b565b611fab908461276d565b611fb6600a8561274b565b91509150915091565b50909160009150565b6001600160a01b03831661202a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610856565b6001600160a01b03821661208b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610856565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166121505760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610856565b6001600160a01b0382166121b25760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610856565b6001600160a01b0383166000908152602081905260409020548181101561222a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610856565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061226190849061276d565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516122ad91815260200190565b60405180910390a350505050565b6001600160a01b0382166123115760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610856565b8060026000828254612323919061276d565b90915550506001600160a01b0382166000908152602081905260408120805483929061235090849061276d565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35b5050565b604051339082156108fc029083906000818181858888f19350505050158015612397573d6000803e3d6000fd5b6001600160a01b0382166124285760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610856565b6001600160a01b0382166000908152602081905260409020548181101561249c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610856565b6001600160a01b03831660009081526020819052604081208383039055600280548492906124cb9084906127d2565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b600060208083528351808285015260005b8181101561254357858101830151858201604001528201612527565b81811115612555576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461258257600080fd5b919050565b6000806040838503121561259a57600080fd5b6125a38361256b565b946020939093013593505050565b6000806000606084860312156125c657600080fd5b6125cf8461256b565b92506125dd6020850161256b565b9150604084013590509250925092565b6000602082840312156125ff57600080fd5b5035919050565b60006020828403121561261857600080fd5b6126218261256b565b9392505050565b600080600080600080600080610100898b03121561264557600080fd5b505086359860208801359850604088013597606081013597506080810135965060a0810135955060c0810135945060e0013592509050565b6000806040838503121561269057600080fd5b6126998361256b565b91506126a76020840161256b565b90509250929050565b600181811c908216806126c457607f821691505b602082108114156126e557634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526011908201527026bab9ba103132903a34329030b236b4b760791b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561274657612746612716565b500290565b60008261276857634e487b7160e01b600052601260045260246000fd5b500490565b6000821982111561278057612780612716565b500190565b6001600160a01b039390931683526020830191909152604082015260600190565b60208082526012908201527121b7b73a3930b1ba1034b990333937bd32b760711b604082015260600190565b6000828210156127e4576127e4612716565b500390565b6000602082840312156127fb57600080fd5b8151801515811461262157600080fdfe55595f34fd936311e65eca0a752ee70068b8992fdf64918aff1b6345689c84e4a2646970667358221220fd724dad04a2203227567caad488b96e5610714f8b9037a2e8c3732c526bde7d64736f6c634300080c0033";

export class Staking__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _claimManager: string,
    _rewardProvider: string,
    _serviceRole: BytesLike,
    _patronRole: BytesLike,
    tokenName: string,
    tokenSymbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Staking> {
    return super.deploy(
      _claimManager,
      _rewardProvider,
      _serviceRole,
      _patronRole,
      tokenName,
      tokenSymbol,
      overrides || {}
    ) as Promise<Staking>;
  }
  getDeployTransaction(
    _claimManager: string,
    _rewardProvider: string,
    _serviceRole: BytesLike,
    _patronRole: BytesLike,
    tokenName: string,
    tokenSymbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _claimManager,
      _rewardProvider,
      _serviceRole,
      _patronRole,
      tokenName,
      tokenSymbol,
      overrides || {}
    );
  }
  attach(address: string): Staking {
    return super.attach(address) as Staking;
  }
  connect(signer: Signer): Staking__factory {
    return super.connect(signer) as Staking__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new utils.Interface(_abi) as StakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Staking {
    return new Contract(address, _abi, signerOrProvider) as Staking;
  }
}
